/*============================================================================
 Name        : Command tool help List.txt
 Author      : Daniel Silbermann, s090116, Declined#8151 (Discord ID) 
 Version     : 2.1
 Date        : 15/02-21
 Last Updated: 20/08-21
 Copyright   : Do not alter, copy or share this file without permission
 Description : This document is created to function as a guide
             : for multiple specific command line functions.
=============================================================================*/
Sections: (so far)
        - Introduction
        - C-code, compile and debugging
        - nslookup
        - openssl * not finished
        - MPI (Bash)
        - GIT (Bash)
================================================
|                Introduction                  |
================================================
This document will highlight syntax for specific
functions, to the point where you should be able
to interact with the topic fluently.

This is the format of this guide.
Commands                                        Description
------------------------------------------------|---------------
: Explanation of command
- Command options
[xxx] is a pseudonum for XXX information
[empty] is a pseudonum for not entering anything.
'$ ' represents the command line, used for
examples.

Max width of this document.
----------------------------------------------------------------------------------------------------------------------------------------------->
                                                                                                                                                
================================================
|                   C-code                     |
================================================
For the Bash console.

C-code programs are compiled with 'gcc'.
C++ uses 'g++' command and it accepts mostly the
same options as gcc.

Commands                                        Description
------------------------------------------------|---------------
 gcc [-c|-S|-E] [-std=standard]                 : There are a ton of options, but only a few to worry about.
        [-g] [-pg] [-Olevel]
        [-Wwarn...] [-Wpedantic]
        [-Idir...] [-Ldir...]
        [-Dmacro[=defn]...] [-Umacro]
        [-foption...] [-mmachine-option...]
        [-o outfile] [@file] infile...

gcc -o outputfile infile.c                      : Standard usecase
                                                  Uses the input file (aka. code) to create a compiled version
        -w                                      - supress warnings
        -Wall                                   - enables all compiler's warning messages
        -g                                      - Generates debug information to be used by the GDB debugger


For debugging, there's a command called 'gdb'
Once you've used the command "gdb file", you're
sent to the gdb mode, where you can enter
additional commands, to start the debugging
process.

 gdb [-help] [-nh] [-nx] [-q] [-batch]          : The GNU debugger
        [-cd=dir] [-f] [-b bps]  [-tty=dev]
        [-s symfile] [-e prog] [-se prog]
        [-c core] [-p procID] [-x cmds]
        [-d dir] [prog|prog procID|prog core]

gdb mode commands                                Description
------------------------------------------------|---------------
layout next                                     : Opens the layout menu
run                                             : start the program
q                                               : Quit
next | n                                        : Next line in the immediate scope
step | s                                        : Step into
                                                  Will step will go into functions, to see what's going on inside of it.
b                                               : Breakpoint
                                                  Enter a line, or name of a function, to set a breakpoint there
print [variable name]                           :
        @NUMBER                                 - Print array
watch [variable name]                           : Keep watch on a variable
                                                  Every time it changes, we will be notified about it.
refresh                                         : Refreshes the console text
clear [b-name]                                  : Clears the specified breakpoint
set args [input]                                : Define argc/argv
backtrace                                       : 
whatis [variable]                               : Display the variable type, i.e. char, int, ... and so on

[Example]
print array@10                                  : Pretends that 'array' is an array with 10 slots
print *array@10                                 : Dereferences it first.
print *argv@2                                   : Prints the entire set of arguments
print argv[1]                                   : Prints the second argument
print derp=10                                   : Set variable derp to 10.

================================================
|                  nslookup                    |
================================================
'nslookup' is tool to query Internet name
servers interactively.
As far as I can make out, this command syntax is
 identical in both cmd and Bash.

: nslookup syntax
nslookup [website]                              : Provides generic information about a website, such as IP and dns
nslookup -[option] [website]                    : Provides information about a websited specified by the option
nslookup [-option] [name | -] [server]
nslookup –option1 –option2 host-to-find simulated-dns-server
                                                : It is possible to supply 0, 1, 2 or more options
                                                : as well as 2 servers, where the 1st will be queried
                                                : and the 2nd is optional.
                                                : If excluded it'll be sent to the default DNS server

: Option list
•     A                                         : Specifies a computer's IP address.
•     ANY                                       : Specifies a computer's IP address.
•     CNAME                                     : Specifies a canonical name for an alias.
•     GID                                       : Specifies a group identifier of a group name.
•     HINFO                                     : Specifies a computer's CPU and type of operating system.
•     MB                                        : Specifies a mailbox domain name.
•     MG                                        : Specifies a mail group member.
•     MINFO                                     : Specifies mailbox or mail list information.
•     MR                                        : Specifies the mail rename domain name.
•     MX                                        : Specifies the mail exchanger.
•     NS                                        : Specifies a DNS name server for the named zone. (authorative DNS server)
•     PTR                                       : Specifies a computer name if the query is an IP address; otherwise, specifies
                                                  the pointer toother information.
•     SOA                                       : Specifies the start-of-authority for a DNS zone.
•     TXT                                       : Specifies the text information.
•     UID                                       : Specifies the user identifier.
•     UINFO                                     : Specifies the user information.
•     WKS                                       : Describes a well-known service.

Notice that these syntaxes cause an identical,
response,  {"type", "q", "query]
Example:
nslookup -type=mx dtu.dk                        : identical
nslookup -q=mx dtu.dk                           : identical
nslookup -query=mx dtu.dk                       : identical

: ALTERNATE syntax
Type in 'nslookup', and you'll get a '>'
type in:
> set q=[option]
> [website]

:Examples
$ nslookup -type=mx dtu.dk                      : Info about the mail exchange server for DTU
$ nslookup -query=hinfo  -timeout=10 [website]  : Generates a query, using the hinfo option, with timeout 10
                                                : to dtu.dk
$ nslookup dtu.dk google.com                    : Here we send our query to google.com
                                                : which will query dtu.dk on our behalf
                                                : and then google will provide us with the result

================================================
|                    openssl                   |
================================================
: openssl explanation
OpenSSL is a software library for applications
that secure communications over computer
networks against eavesdropping or need to
identify the party at the other end. It is
widely used by Internet servers.

It includes a wide range of cryptographic tools
such as public and private key generation, 
encryption and decryption with Ciphers,
generate certificates of authenticity and more.
For a complete list see the manual.
$ man openssl                                   : Linux command line, Bash.
 
: Syntax
openssl command [command_opts] [command_args]

: Library information
openssl version					: Will provide info about the version you're running
openssl version -[option]
:valid options
•     help                                      : Display this summary
•     a                                         : Show all data
•     b                                         : Show build date
•     d                                         : Show configuration directory
•     e                                         : Show engines directory
•     f                                         : Show compiler flags used
•     o                                         : Show some internal datatype options
•     p                                         : Show target build platform
•     r                                         : Show random seeding options
•     v                                         : Show library version

openssl help					: Print all of the available commands
openssl help [command]				: Print information about specific commands,
        : 3 types
        : - standard Commands
        : - Message Digest commands ("dgst")
        : - Cipher commands ("enc")

openssl list -[options]				: Provide details in list format
: valid options
•     help                                      : Display this summary
•     1                                         : List in one column
•     commands                                  : List of standard commands
•     digest-commands                           : List of message digest commands
•     digest-algorithms                         : List of message digest algorithms
•     cipher-commands                           : List of cipher commands
•     cipher-algorithms                         : List of cipher algorithms
•     public-key-algorithms                     : List of public key algorithms
•     public-key-methods                        : List of public key methods
•     disabled                                  : List of disabled features
•     missing-help                              : List missing detailed help strings
•     options val				: List options for specified command

[Example]
$ openssl list -commands

: Examples
- File encryption
$ touch plain.txt && echo "Hello World!" > plain.txt
$ openssl enc -aes-256-cbc -in plain.txt -out encrypted.bin
//enter aes-256-cbc encryption password: example
//Verifying - enter aes-256-cbc encryption password: example

- File en-/decryption
$ openssl enc -aes-256-cbc -d -in encrypted.bin -pass pass:example
                                                : Simple encryption of a file, using 
                                                : cbc mode (chain block chaining)
$ openssl pkeyutl -encrypt -in <input_file> -inkey <key.pem> -out <output_file>
                                                : Encrypts a file, using a private key.
                                                : (keep in mind that since we're using RSA the file can't exceed 116 bytes)
$ openssl pkeyutl -decrypt -in <input_file> -inkey <key.pem> -out <output_file>
                                                : Decrypts the file you just encrypted, remember to switch input/output files

- Key generation
$ openssl genrsa -out key.pem 1024              : Generates a RSA key of 1024 bits
                                                : Result is placed in key.pem
                                                : It contains the private key.
                                                : The private key is coded using the
                                                  'Privacy Enhanced Email' or PEM.
$ openssl rsa -in key.pem -text -noout          : Provides some information about how the key was generated

- Key en-/decryption
$ openssl rsa -in key.pem -des3 -out enc-key.pem
                                                : Encrypts the key
$ openssl rsa -in key.pem -pubout -out pub-key.pem
                                                : Extracts the public key
 openssl pkey -in 


================================================
|                      MPI                     |
================================================
MPI stands for "Message Passing Interface"
Installing on your own computer
$ sudo apt update
$ sudo apt install mpich
To compile a code with MPI, you need to load an mpi module
when using the LSF cluster
> module load mpi
After that you can compile using the same format as gcc
Although instead of gcc, type 'mpicc'
Example:
> mpicc -o hello_world hello_world.c
-----------------LSF Explanation----------------:---------------
:For the LSF cluster, follow instructions here
: http://www.cc.dtu.dk/?page_id=2501


--------------Library Information---------------:---------------
mpicc -o [compiledname] [filename.c]            : to compile a file using MPI
mpiexec -n [number of processes] ./hello_world  : To run a compiled program with a
                                                : specified number of processes



